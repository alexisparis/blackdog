/* 
 * TransSiberia-ui : siberia plugin frontend for TransSiberia
 *
 * Copyright (C) 2008 Alexis PARIS
 * Project Lead:  Alexis Paris
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library;
 * if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.
 */
package org.siberia.trans.ui.editor.impl;

import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.util.List;
import java.util.ResourceBundle;
import javax.swing.Action;
import javax.swing.JToolBar;
import javax.swing.text.html.HTMLEditorKit;
import org.siberia.trans.TransSiberia;
import org.siberia.trans.ui.action.impl.TransSiberianAction;
import org.siberia.ui.swing.table.SibListTablePanel;
import org.siberia.ui.swing.table.TablePanel;
import org.siberia.ui.swing.tool.SiberiaToolBar;

/**
 *
 *
 * @author  alexis
 */
public class PluginManagerPanel extends javax.swing.JPanel {
    
    private SibListTablePanel panel = null;
    
    /** text to use for the title label */
    private String            label = null;
    
    /** Creates new form PluginManagerPanel */
    public PluginManagerPanel()
    {
        initComponents();
	
	this.explanationTextPane.setEditorKit(new HTMLEditorKit());
        
        this.panel = new SibListTablePanel();
	
	this.panel.setConfigurationRelativeFilePath("pluginManager.properties");
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = gbc.BOTH;
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0f;
        gbc.weighty = 1.0f;
        
        this.mainPanel.add(panel, gbc);
        
        ResourceBundle rb = ResourceBundle.getBundle(PluginManagerPanel.class.getName());
	this.label = rb.getString("tableTitle");
        this.tableTitle.setText(this.label);
    }
    
    /** set the TransSiberian
     *	@param transSiberian a TransSiberia
     */
    public void setTransSiberian(TransSiberia transSiberian)
    {
	JToolBar bar = this.createToolbar(transSiberian);
	
	if ( bar == null )
	{
	    this.toolbarPanel.setVisible(false);
	    this.toolbarPanel.removeAll();
	}
	else
	{
	    this.toolbarPanel.setVisible(true);
	    this.toolbarPanel.add(bar);
	    Dimension pref = this.toolbarPanel.getPreferredSize();
	    pref.height = bar.getPreferredSize().height;
	    this.toolbarPanel.setPreferredSize(pref);
	    this.toolbarPanel.revalidate();
	    this.toolbarPanel.repaint();
	}
    }
    
    /** indicate the number of plugins
     *	@param pluginCount the number of plugin
     */
    public void setPluginCount(int count)
    {
        this.tableTitle.setText(this.label + (count <= 0 ? "" : " (" + count + ")"));
    }
    
    /** create the toolbar that allow plugin environment managment
     *	@return a JToolbar
     */
    private JToolBar createToolbar(final TransSiberia transSiberia)
    {
	SiberiaToolBar bar = null;
	
	if ( transSiberia != null )
	{
	    bar = new SiberiaToolBar();

	    bar.setContext("plugin.managment", new org.siberia.ui.bar.customizer.PluginToolBarCustomizer()
	    {
		/** create an action by using the class name ( return a null action if the class could not be found )
		 *  @param className the complete class name
		 *  @param parameters a list of parameter
		 *  @return an action
		 */
		public Action createAction(String className, List parameters)
		{
		    Action result = super.createAction(className, parameters);

		    if ( result instanceof TransSiberianAction )
		    {
			((TransSiberianAction)result).setTransSiberia(transSiberia);
		    }

		    return result;
		}
	    });
	}
	
	return bar;
    }
    
    /** return the SibListTablePanel
     *  @return a SibListTablePanel
     */
    public SibListTablePanel getTablePanel()
    {   return this.panel; }
    
    /** return the JTextPane which allow to display additional information about selected plugin
     *  @return a JTextPane
     */
    public javax.swing.JTextPane getExplanationTextPane()
    {   return this.explanationTextPane; }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        tableTitle = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        explanationTextPane = new javax.swing.JTextPane();
        toolbarPanel = new javax.swing.JPanel();

        tableTitle.setText("Plugins");

        mainPanel.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        explanationTextPane.setBackground(new java.awt.Color(238, 238, 238));
        explanationTextPane.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        explanationTextPane.setEditable(false);
        jScrollPane2.setViewportView(explanationTextPane);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
        );

        toolbarPanel.setLayout(new javax.swing.BoxLayout(toolbarPanel, javax.swing.BoxLayout.LINE_AXIS));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, toolbarPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, tableTitle))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(toolbarPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(tableTitle)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JTextPane explanationTextPane;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JScrollPane jScrollPane2;
    protected javax.swing.JPanel mainPanel;
    protected javax.swing.JLabel tableTitle;
    protected javax.swing.JPanel toolbarPanel;
    // End of variables declaration//GEN-END:variables
    
}
